version: "3"

networks:
  app-network:
    driver: bridge

services:
  web:
    image: nginx:alpine
    volumes:
      - ./etc/ssl:/etc/ssl
      - ${PROJECT_PATH}:/var/www/html
      - ./etc/nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    command: nginx -g 'daemon off;'
    restart: always
    depends_on:
      - php
      - mysqldb
    networks:
      - app-network
  php:
    build:
      context: ./docker/php
      args:
        - PHP_VERSION=${PHP_VERSION}
    restart: always
    volumes:
      - ./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ${PROJECT_PATH}:/var/www/html
    networks:
      - app-network
  mysqldb:
    image: mysql:${MYSQL_VERSION}
    container_name: ${MYSQL_HOST}
    restart: always
    env_file:
      - ".env"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "8989:3306"
    networks:
      - app-network
    volumes:
      - ${DATABASE_PATH}/mysql:/var/lib/mysql
      - ./etc/mysql/docker.cnf:/etc/mysql/conf.d/docker.cnf
      - ${DATABASE_PATH}/dumps:/docker-entrypoint-initdb.d
  node:
    image: "node:lts"
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ${PROJECT_PATH}:/home/node/app
    expose:
      - "9001"
    networks:
      - app-network
